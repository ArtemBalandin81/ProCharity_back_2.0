version: "3.8"

volumes:
  postgres_data:

services:
  backend:
    image: ghcr.io/studio-yandex-practicum/procharity_back_2.0_backend:latest
    container_name: procharity_bot_backend
    restart: always
    depends_on:
        postgres:
          condition: service_healthy
    ports:
        - "8000:8000"
    environment:
      - POSTGRES_DB=${{ secrets.POSTGRES_DB }}
      - POSTGRES_USER=${{ secrets.POSTGRES_USER }}
      - POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
      - DB_HOST=${{ secrets.DB_HOST }}
      - DB_PORT=${{ secrets.DB_PORT }}
      - BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
      - BOT_WEBHOOK_MODE=${{ secrets.BOT_WEBHOOK_MODE }}
      - APPLICATION_URL=${{ secrets.APPLICATION_URL }}
      - SECRET_KEY=${{ secrets.SECRET_KEY }}
      - ROOT_PATH=${{ secrets.ROOT_PATH }}

  postgres:
    image: postgres:13.2
    container_name: procharity_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.23.3-alpine
    container_name: procharity_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./infra/nginx/nginx.local.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - .env
