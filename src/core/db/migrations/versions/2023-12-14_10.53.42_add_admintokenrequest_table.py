"""Add AdminTokenRequest table

Revision ID: 6583446a0d10
Revises: efd08301014a
Create Date: 2023-12-14 10:53:42.315506

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "6583446a0d10"
down_revision = "efd08301014a"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admin_token_requests",
        sa.Column("email", sa.String(length=48), nullable=False),
        sa.Column("token", sa.String(length=128), nullable=False),
        sa.Column("token_expiration_date", sa.Date(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.Date(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.Column("updated_at", sa.Date(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.alter_column(
        "admin_users",
        "email",
        existing_type=sa.VARCHAR(length=48),
        type_=sa.String(length=320),
        existing_nullable=False,
    )
    op.alter_column(
        "admin_users",
        "hashed_password",
        existing_type=sa.VARCHAR(length=128),
        type_=sa.String(length=1024),
        existing_nullable=False,
    )
    op.drop_constraint("admin_users_email_key", "admin_users", type_="unique")
    op.create_index(op.f("ix_admin_users_email"), "admin_users", ["email"], unique=True)
    op.add_column(
        "notifications", sa.Column("created_at", sa.Date(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False)
    )
    op.add_column(
        "notifications", sa.Column("updated_at", sa.Date(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=False)
    )
    op.alter_column("notifications", "was_sent", existing_type=sa.BOOLEAN(), nullable=False)
    op.alter_column("notifications", "sent_date", existing_type=postgresql.TIMESTAMP(), type_=sa.Date(), nullable=False)
    op.alter_column("notifications", "sent_by", existing_type=sa.VARCHAR(length=48), nullable=False)
    op.alter_column("tasks", "title", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("tasks", "category_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("tasks", "bonus", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column("tasks", "location", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("tasks", "link", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column("tasks", "description", existing_type=sa.VARCHAR(), nullable=False)
    op.alter_column(
        "tasks", "is_archived", existing_type=sa.BOOLEAN(), nullable=False, existing_server_default=sa.text("false")
    )
    op.alter_column(
        "tasks",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "tasks",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column("unsubscribe_reason", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.alter_column(
        "unsubscribe_reason",
        "unsubscribe_reason",
        existing_type=sa.VARCHAR(length=48),
        type_=sa.String(length=128),
        nullable=True,
    )
    op.alter_column(
        "unsubscribe_reason",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "unsubscribe_reason",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.drop_column("unsubscribe_reason", "telegram_id")
    op.drop_column("unsubscribe_reason", "archive")
    op.alter_column(
        "users_categories",
        "created_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "users_categories",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=sa.Date(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.drop_column("users_categories", "telegram_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users_categories", sa.Column("telegram_id", sa.BIGINT(), autoincrement=False, nullable=True))
    op.alter_column(
        "users_categories",
        "updated_at",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "users_categories",
        "created_at",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.add_column(
        "unsubscribe_reason",
        sa.Column("archive", sa.BOOLEAN(), server_default=sa.text("false"), autoincrement=False, nullable=True),
    )
    op.add_column("unsubscribe_reason", sa.Column("telegram_id", sa.BIGINT(), autoincrement=False, nullable=True))
    op.alter_column(
        "unsubscribe_reason",
        "updated_at",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "unsubscribe_reason",
        "created_at",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "unsubscribe_reason",
        "unsubscribe_reason",
        existing_type=sa.String(length=128),
        type_=sa.VARCHAR(length=48),
        nullable=False,
    )
    op.alter_column("unsubscribe_reason", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "tasks",
        "updated_at",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "tasks",
        "created_at",
        existing_type=sa.Date(),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=False,
        existing_server_default=sa.text("CURRENT_TIMESTAMP"),
    )
    op.alter_column(
        "tasks", "is_archived", existing_type=sa.BOOLEAN(), nullable=True, existing_server_default=sa.text("false")
    )
    op.alter_column("tasks", "description", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("tasks", "link", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("tasks", "location", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("tasks", "bonus", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("tasks", "category_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column("tasks", "title", existing_type=sa.VARCHAR(), nullable=True)
    op.alter_column("notifications", "sent_by", existing_type=sa.VARCHAR(length=48), nullable=True)
    op.alter_column("notifications", "sent_date", existing_type=sa.Date(), type_=postgresql.TIMESTAMP(), nullable=True)
    op.alter_column("notifications", "was_sent", existing_type=sa.BOOLEAN(), nullable=True)
    op.drop_column("notifications", "updated_at")
    op.drop_column("notifications", "created_at")
    op.drop_index(op.f("ix_admin_users_email"), table_name="admin_users")
    op.create_unique_constraint("admin_users_email_key", "admin_users", ["email"])
    op.alter_column(
        "admin_users",
        "hashed_password",
        existing_type=sa.String(length=1024),
        type_=sa.VARCHAR(length=128),
        existing_nullable=False,
    )
    op.alter_column(
        "admin_users",
        "email",
        existing_type=sa.String(length=320),
        type_=sa.VARCHAR(length=48),
        existing_nullable=False,
    )
    op.drop_table("admin_token_requests")
    # ### end Alembic commands ###
