name: Stage backend build and deploy

on:
  push:
    branches:
      - develop
      - 'feature/**'
      - 'fix/**'
      - 'refactoring/**'

  pull_request:
    branches:
      - develop
    types: [ closed ]

  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REP_OWNER: studio-yandex-practicum
  IMAGE_NAME: procharity_back_2.0_backend
  DEPLOY_PATH: /procharity2/full
  WORK_DIR: /app

defaults:
  run:
    working-directory: .

jobs:
  build_and_push_docker_image:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    environment:
      name: deploy

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Docker login
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          labels: runnumber=${GITHUB_RUN_ID}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REP_OWNER }}/${{ env.IMAGE_NAME }}:stage,
            ${{ env.REGISTRY }}/${{ env.REP_OWNER }}/${{ env.IMAGE_NAME }}:latest,
            ${{ env.REGISTRY }}/${{ env.REP_OWNER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build_and_push_docker_image
    environment:
      name: deploy
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Copy docker-compose and nginx files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "infra/docker-compose.swag.yml, infra/swag_nginx.conf"
          target: ${{ env.DEPLOY_PATH }}

      - name: Create .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ env.DEPLOY_PATH }}
            mv infra/docker-compose.swag.yml infra/docker-compose.yaml
            rm -f .env
            cat > .env <<- EOM
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
            BOT_WEBHOOK_MODE=${{ secrets.BOT_WEBHOOK_MODE }}
            APPLICATION_URL=${{ secrets.APPLICATION_URL }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            ROOT_PATH=${{ secrets.ROOT_PATH }}
            EOM
  start_application:
    name: Start application
    runs-on: ubuntu-latest
    environment:
      name: deploy
    needs: deploy
    steps:
      - name: Start application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ env.DEPLOY_PATH }}/infra
            docker ps
            docker image prune -f
            docker pull  ${{ env.REGISTRY }}/${{ env.REP_OWNER }}/${{ env.IMAGE_NAME }}:latest
            docker compose --file docker-compose.yaml stop
            docker compose --file docker-compose.yaml rm backend
            docker compose --file docker-compose.yaml up -d
      - name: Making migrations
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ${{ env.DEPLOY_PATH }}/infra
            docker compose exec -T -w ${{ env.WORK_DIR }} backend alembic upgrade head
      - name: Sleep for 30 seconds
        run: sleep 30s
        shell: bash
